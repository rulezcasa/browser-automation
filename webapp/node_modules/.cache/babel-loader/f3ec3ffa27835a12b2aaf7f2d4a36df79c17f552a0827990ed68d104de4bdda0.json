{"ast":null,"code":"var _jsxFileName = \"/Volumes/Harish/Projects/browser-automation/browser-automation/webapp/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const websocket = useRef(null);\n\n  // Typing animation function\n  const addMessageWithTyping = (from, text) => {\n    let index = 0;\n    const interval = 30; // typing speed in ms\n    const typingId = `typing-${Date.now()}`; // unique ID\n\n    setMessages(prev => [...prev, {\n      from,\n      text: \"\",\n      id: typingId\n    }]);\n    const typeChar = () => {\n      setMessages(prev => prev.map(msg => {\n        if (msg.id === typingId) {\n          return {\n            ...msg,\n            text: text.slice(0, index + 1)\n          };\n        }\n        return msg;\n      }));\n      index++;\n      if (index < text.length) {\n        setTimeout(typeChar, interval);\n      }\n    };\n    typeChar();\n  };\n  useEffect(() => {\n    // Add welcome message with animation\n    addMessageWithTyping(\"system\", \"Welcome! How can I assist you today?\");\n    websocket.current = new WebSocket(\"ws://localhost:8000/chat\");\n    websocket.current.onmessage = event => {\n      addMessageWithTyping(\"bot\", event.data);\n    };\n    return () => websocket.current.close();\n  }, []);\n  const sendMessage = () => {\n    if (input.trim()) {\n      setMessages(prev => [...prev, {\n        from: \"user\",\n        text: input,\n        id: `user-${Date.now()}`\n      }]);\n      websocket.current.send(input);\n      setInput(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Browser Automation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatBox,\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: msg.from === \"user\" ? styles.userMsg : styles.botMsg,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.from === \"user\" ? \"You\" : msg.from === \"bot\" ? \"Bot\" : \"System\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, msg.id || i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputBox,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.button,\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.button,\n        onClick: () => window.location.reload(),\n        children: \"Clear chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"69ncOtNcEgFhtXybPWCxk555ANU=\");\n_c = ChatWindow;\nconst styles = {\n  container: {\n    maxWidth: 600,\n    margin: \"0 auto\",\n    padding: 20,\n    fontFamily: \"sans-serif\"\n  },\n  chatBox: {\n    height: 400,\n    overflowY: \"scroll\",\n    border: \"1px solid #ccc\",\n    padding: 10,\n    marginBottom: 10,\n    backgroundColor: \"#f9f9f9\"\n  },\n  inputBox: {\n    display: \"flex\",\n    gap: \"10px\"\n  },\n  input: {\n    flex: 1,\n    padding: 10,\n    fontSize: 16\n  },\n  button: {\n    padding: \"10px 20px\",\n    fontSize: 16\n  },\n  userMsg: {\n    textAlign: \"right\",\n    margin: \"5px 0\"\n  },\n  botMsg: {\n    textAlign: \"left\",\n    margin: \"5px 0\",\n    color: \"#333\"\n  }\n};\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","ChatWindow","_s","messages","setMessages","input","setInput","websocket","addMessageWithTyping","from","text","index","interval","typingId","Date","now","prev","id","typeChar","map","msg","slice","length","setTimeout","current","WebSocket","onmessage","event","data","close","sendMessage","trim","send","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","chatBox","i","userMsg","botMsg","inputBox","type","value","onChange","e","target","onKeyDown","key","placeholder","button","onClick","window","location","reload","_c","maxWidth","margin","padding","fontFamily","height","overflowY","border","marginBottom","backgroundColor","display","gap","flex","fontSize","textAlign","color","$RefreshReg$"],"sources":["/Volumes/Harish/Projects/browser-automation/browser-automation/webapp/src/components/ChatWindow.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\nfunction ChatWindow() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const websocket = useRef(null);\n\n  // Typing animation function\n  const addMessageWithTyping = (from, text) => {\n    let index = 0;\n    const interval = 30; // typing speed in ms\n    const typingId = `typing-${Date.now()}`; // unique ID\n\n    setMessages((prev) => [...prev, { from, text: \"\", id: typingId }]);\n\n    const typeChar = () => {\n      setMessages((prev) =>\n        prev.map((msg) => {\n          if (msg.id === typingId) {\n            return { ...msg, text: text.slice(0, index + 1) };\n          }\n          return msg;\n        })\n      );\n\n      index++;\n      if (index < text.length) {\n        setTimeout(typeChar, interval);\n      }\n    };\n\n    typeChar();\n  };\n\n  useEffect(() => {\n    // Add welcome message with animation\n    addMessageWithTyping(\"system\", \"Welcome! How can I assist you today?\");\n\n    websocket.current = new WebSocket(\"ws://localhost:8000/chat\");\n\n    websocket.current.onmessage = (event) => {\n      addMessageWithTyping(\"bot\", event.data);\n    };\n\n    return () => websocket.current.close();\n  }, []);\n\n  const sendMessage = () => {\n    if (input.trim()) {\n      setMessages((prev) => [\n        ...prev,\n        { from: \"user\", text: input, id: `user-${Date.now()}` },\n      ]);\n      websocket.current.send(input);\n      setInput(\"\");\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <h2>Browser Automation</h2>\n      <div style={styles.chatBox}>\n        {messages.map((msg, i) => (\n          <div\n            key={msg.id || i}\n            style={msg.from === \"user\" ? styles.userMsg : styles.botMsg}\n          >\n            <strong>\n              {msg.from === \"user\"\n                ? \"You\"\n                : msg.from === \"bot\"\n                ? \"Bot\"\n                : \"System\"}\n              :\n            </strong>{\" \"}\n            <span>{msg.text}</span>\n          </div>\n        ))}\n      </div>\n      <div style={styles.inputBox}>\n        <input\n          style={styles.input}\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n          placeholder=\"Type your message...\"\n        />\n        <button style={styles.button} onClick={sendMessage}>\n          Send\n        </button>\n        <button style={styles.button} onClick={() => window.location.reload()}>\n          Clear chat\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    maxWidth: 600,\n    margin: \"0 auto\",\n    padding: 20,\n    fontFamily: \"sans-serif\",\n  },\n  chatBox: {\n    height: 400,\n    overflowY: \"scroll\",\n    border: \"1px solid #ccc\",\n    padding: 10,\n    marginBottom: 10,\n    backgroundColor: \"#f9f9f9\",\n  },\n  inputBox: { display: \"flex\", gap: \"10px\" },\n  input: { flex: 1, padding: 10, fontSize: 16 },\n  button: { padding: \"10px 20px\", fontSize: 16 },\n  userMsg: { textAlign: \"right\", margin: \"5px 0\" },\n  botMsg: { textAlign: \"left\", margin: \"5px 0\", color: \"#333\" },\n};\n\nexport default ChatWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}